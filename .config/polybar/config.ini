;===============================================================================
;
;
;   ██████╗  ██████╗ ██╗  ██╗   ██╗██████╗  █████╗ ██████╗
;   ██╔══██╗██╔═══██╗██║  ╚██╗ ██╔╝██╔══██╗██╔══██╗██╔══██╗
;   ██████╔╝██║   ██║██║   ╚████╔╝ ██████╔╝███████║██████╔╝
;   ██╔═══╝ ██║   ██║██║    ╚██╔╝  ██╔══██╗██╔══██║██╔══██╗
;   ██║     ╚██████╔╝███████╗██║   ██████╔╝██║  ██║██║  ██║
;   ╚═╝      ╚═════╝ ╚══════╝╚═╝   ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝
;
;
;   To learn more about how to configure Polybar
;   go to https://github.com/polybar/polybar
;
;   The README contains a lot of information
;
;===============================================================================
include-file = $HOME/.config/polybar/constants.ini
include-file = $HOME/.config/polybar/modules-internal.ini
include-file = $HOME/.config/polybar/modules-custom.ini
;===============================================================================
[bar]
; Use either of the following command to list available outputs:
; $ polybar -M | cut -d ':' -f 1
; $ xrandr -q | grep " connected" | cut -d ' ' -f1
; If no monitor is given, the primary monitor is used if it exists
;monitor =

; Use the specified monitor as a fallback if the main one is not found.
;monitor-fallback =

; Require the monitor to be in connected state
;monitor-strict = false

; Use fuzzy matching for monitors (only ignores dashes -)
; Useful when monitors are named differently with different drivers.
;monitor-exact = true

; Tell the Window Manager not to configure the window.
; Use this to detach the bar if your WM is locking its size/position.
; Note: With this most WMs will no longer reserve space for
; the bar and it will overlap other windows. You need to configure
; your WM to add a gap where the bar will be placed.
;override-redirect = false

; Background ARGB color (e.g. #f00, #ff992a, #ddff1023)
background = ${color.bar-background}

; Foreground ARGB color (e.g. #f00, #ff992a, #ddff1023)
foreground = ${color.bar-foreground}

; Background gradient (vertical steps)
;   background-[0-9]+ = #aarrggbb
;background-0 =

; Value used for drawing rounded corners
; For this to work you may also need to enable pseudo-transparency or use a
; compositor like picom.
; Individual values can be defined using:
;   radius-{top,bottom}
; or
;   radius-{top,bottom}-{left,right}
; Polybar always uses the most specific radius definition for each corner.
;radius = 0.0

; Under-/overline pixel size and argb color
; Individual values can be defined using:
;   {overline,underline}-size
;   {overline,underline}-color
;line-size = 1
;line-color = #f00

; Values applied to all borders
; Individual side values can be defined using:
;   border-{left,top,right,bottom}-size
;   border-{left,top,right,bottom}-color
; The top and bottom borders are added to the bar height, so the effective
; window height is:
;   height + border-top-size + border-bottom-size
; Meanwhile the effective window width is defined entirely by the width key and
; the border is placed within this area. So you effectively only have the
; following horizontal space on the bar:
;   width - border-right-size - border-left-size
; border-size supports any percentage with offset.
; For border-{left,right}-size, the percentage is relative to the monitor width
; and for border-{top,bottom}-size, it is relative to the monitor height.
border-size = ${size.bar-border}
border-color = ${color.bar-border}

; Padding (number of spaces, pixels, or points) to add at the beginning/end of
; the bar
; Individual side values can be defined using:
;   padding-{left,right}
;padding = 0

; Margin (number of spaces, pixels, or points) to add before/after each module
; Individual side values can be defined using:
;   module-margin-{left,right}
;module-margin = 0

; Fonts are defined using <font-name>;<vertical-offset>
; Font names are specified using a fontconfig pattern.
;   font-0 = NotoSans-Regular:size=8;2
;   font-1 = MaterialIcons:size=10
;   font-2 = Termsynu:size=8;-1
;   font-3 = FontAwesome:size=10
; See the Fonts wiki page for more details
font-0 = ${font.default}
font-1 = ${font.separator}

; The separator will be inserted between the output of each module
; This has the same properties as a label
separator = ${separator.character}
separator-background = ${separator.background}
separator-font = ${separator.font}
separator-padding = ${separator.padding}

; Opacity value between 0.0 and 1.0 used on fade in/out
;dim-value = 1.0

; Value to be used to set the WM_NAME atom
; If the value is empty or undefined, the atom value
; will be created from the following template: polybar-[BAR]_[MONITOR]
; NOTE: The placeholders are not available for custom values
;wm-name =

; Locale used to localize various module data (e.g. date)
; Expects a valid libc locale, for example: sv_SE.UTF-8
;locale =

; Restack the bar window and put it above the
; selected window manager's root
;
; Fixes the issue where the bar is being drawn
; on top of fullscreen window's
;
; Currently supported values:
;   generic (Tries the ewmh strategy and falls back to the bottom strategy.
;            This is a best-effort strategy and may change and be tweaked in
;            the future, the individual strategies are available on their own)
;   bspwm   (Moves the bar window above all bspwm root windows)
;   bottom  (Moves the bar window above the first window in the window stack.
;   ewmh    (Moves the bar above the window specified in
;            _NET_SUPPORTING_WM_CHECK, if it is set
;   i3 (requires `override-redirect = true`)
;wm-restack =

; Whether polybar defines struts (_NET_WM_STRUT_PARTIAL and _NET_WM_STRUT)
;enable-struts = true

; Set a DPI values used when rendering text
; This only affects scalable fonts
; Set this to 0 to let polybar calculate the dpi from the screen size.
; dpi =
;dpi-x = 96
;dpi-y = 96

; Enable support for inter-process messaging
; See the Messaging wiki page for more details.
enable-ipc = true

; Fallback click handlers that will be called if
; there's no matching module handler found.
;click-left =
;click-middle =
;click-right =
;scroll-up =
;scroll-down =
;double-click-left =
;double-click-middle =
;double-click-right =

; If two clicks are received within this interval (ms), they are recognized as
; a double click.
;double-click-interval = 400

; Requires polybar to be built with xcursor support (xcb-util-cursor)
; Possible values are:
; - default   : The default pointer as before, can also be an empty string
;               (default)
; - pointer   : Typically in the form of a hand
; - ns-resize : Up and down arrows, can be used to indicate scrolling
;cursor-click = pointer
;cursor-scroll = ns-resize
;===============================================================================
[bar/top]
inherit = bar

; Put the bar at the bottom of the screen
bottom = false

; Modules are added to one of the available blocks
;   modules-left = cpu ram
;   modules-center = xwindow xbacklight
;   modules-right = ipc clock
modules-left = user xwindow date
;===============================================================================
[bar/bottom]
inherit = bar

; Put the bar at the bottom of the screen
bottom = true

; Modules are added to one of the available blocks
;   modules-left = cpu ram
;   modules-center = xwindow xbacklight
;   modules-right = ipc clock
modules-left = i3 separator
modules-right = separator cpu memory wireless battery backlight pulseaudio tray
;===============================================================================
[global/wm]
; Adjust the _NET_WM_STRUT_PARTIAL top value
;   Used for top aligned bars
; Supports any percentage with offset relative to the monitor height
margin-bottom = 0

; Adjust the _NET_WM_STRUT_PARTIAL bottom value
;   Used for bottom aligned bars
; Supports any percentage with offset relative to the monitor height
margin-top = 0
;===============================================================================
[settings]
; Reload when the screen configuration changes (XCB_RANDR_SCREEN_CHANGE_NOTIFY
; event)
screenchange-reload = true

; Compositing operators
; @see: https://www.cairographics.org/manual/cairo-cairo-t.html#cairo-operator-t
;compositing-background = source
;compositing-foreground = over
;compositing-overline = over
;compositing-underline = over
;compositing-border = over

; Define fallback values used by all module formats
;format-foreground =
;format-background =
;format-underline =
;format-overline =
;format-spacing =
;format-padding =
;format-margin =
;format-offset =

; Enables pseudo-transparency for the bar
; If set to true the bar can be transparent without a compositor.
pseudo-transparency = false
