[module/menu-apps]
type = custom/menu

; If true, <label-toggle> will be to the left of the menu items (default).
; If false, it will be on the right of all the items.
expand-right = true

; "menu-LEVEL-N" has the same properties as "label-NAME" with
; the additional "exec" property
;
; Commands will be executed using "/bin/sh -c $COMMAND"
menu-0-0 = Internet
menu-0-0-background = ${color.unfocused-background}
menu-0-0-padding = ${label.padding}
menu-0-0-exec = #menu-apps.open.1

menu-0-1 = Office
menu-0-1-background = ${color.unfocused-background}
menu-0-1-padding = ${label.padding}
menu-0-1-exec = #menu-apps.open.2

menu-1-0 = 󰈹 Firefox
menu-1-0-background = ${color.unfocused-background}
menu-1-0-padding = ${label.padding}
menu-1-0-exec = firefox

menu-1-1 = 󰇚 Transmission
menu-1-1-background = ${color.unfocused-background}
menu-1-1-padding = ${label.padding}
menu-1-1-exec = transmission-gtk

menu-2-0 =  LibreOffice
menu-2-0-background = ${color.unfocused-background}
menu-2-0-padding = ${label.padding}
menu-2-0-exec = libreoffice

; Available tags:
;   <label-toggle> (default) - gets replaced with <label-(open|close)>
;   <menu> (default)
; If expand-right is true, the default will be "<label-toggle><menu>" and the
; other way around otherwise.
; Note that if you use <label-toggle> you must also include
; the definition for <label-open>
; format = <label-toggle><menu>
label-open =  i3
label-open-background = ${color.focused-background}
label-open-padding = ${label.padding}

label-close = 󰅖
label-close-background = ${color.urgent-background}
label-close-padding = ${label.padding}

; Optional item separator
; Default: none
label-separator = ${separator.character}
label-separator-font = ${separator.font}
label-separator-background = ${separator.background}
label-separator-padding = ${separator.padding}
;===============================================================================
[module/host]
type = custom/script

; Available tokens:
;   %counter%
; Command to be executed (using "/bin/sh -c [command]")
exec = printf "󰟀 %s\n" "${HOSTNAME}"

; Seconds to sleep between updates
; Default: 5 (0 if `tail = true`)
interval = 86400

; Available tags:
;   <label> (default)
format = <label>
format-padding = ${label.padding}

; Available tokens:
;   %output%
; Default: %output%
label = %output%
label-minlen = ${size.host-label-minlen}
label-maxlen = ${size.host-label-maxlen}
label-alignment = center
;===============================================================================
[module/separator]
type = custom/text

; Available tags:
;   <label> (default)
format = <label>
format-background = ${separator.background}
format-padding = ${separator.padding}

; No tokens available
label = ⁣
label-font = ${separator.font}
label-padding = ${separator.padding}
;===============================================================================
[module/user]
type = custom/script

; Available tokens:
;   %counter%
; Command to be executed (using "/bin/sh -c [command]")
exec = printf "󰀄 %s\n" "${USER}"

; Seconds to sleep between updates
; Default: 5 (0 if `tail = true`)
interval = 86400

; Available tags:
;   <label> (default)
format = <label>
format-padding = ${label.padding}

; Available tokens:
;   %output%
; Default: %output%
label = %output%
label-minlen = ${size.user-label-minlen}
label-maxlen = ${size.user-label-maxlen}
label-alignment = center
;===============================================================================
[module/weather]
type = custom/script

; Available tokens:
;   %counter%
; Command to be executed (using "/bin/sh -c [command]")
exec = "${HOME}/.config/wttrin/weather-temp"

; Seconds to sleep between updates
; Default: 5 (0 if `tail = true`)
interval = 900

; Available tags:
;   <label> (default)
format = <label>
format-padding = ${label.padding}

; Available tokens:
;   %output%
; Default: %output%
label = %output%
