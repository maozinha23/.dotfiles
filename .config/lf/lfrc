#-------------------------------------------------------------------------------
# COMMANDS
#-------------------------------------------------------------------------------
# Quit lf and return to the shell.
# (default q)
map q quit

# Move/scroll the current file selection upwards/downwards by one/half a
# page/full page.
# (default k and <up>)
map k #up
map <up> up

# (default <c-u>)
map <c-u> #half-up

# (default <c-b> and <pgup>)
map <c-b> #page-up
map <pgup> page-up

# (default <c-y>)
map <c-y> scroll-up

# (default j and <down>)
map j #down
map <down> down

# (default <c-d>)
map <c-d> #half-down

# (default <c-f> and <pgdn>)
map <c-f> #page-down
map <pgdn> page-down

# (default <c-e>)
map <c-e> scroll-down

# Change the current working directory to the parent directory.
# (default h and <left>)
map h #updir
map <left> updir

# If the current file is a directory, then change the current directory to it,
# otherwise, execute the open command. A default open command is provided to
# call the default system opener asynchronously with the current file as the
# argument. A custom open command can be defined to override this default.
# (default l and <right>)
map l #open
map <right> #open
map <enter> open

# Change the current working directory to the next/previous jumplist item.
# (default ])
map ] #jump-next

# (default [)
map [ #jump-prev

# Move the current file selection to the top/bottom of the directory. A count
# can be specified to move to a specific line, for example, use 3G to move to
# the third line.
# (default gg and <home>)
map gg #top
map <home> top

# (default G and <end>)
map G #bottom
map <end> bottom

# Move the current file selection to the high/middle/low of the screen.
# (default H)
map H #high

# (default M)
map M #middle

# (default L)
map L #low

# Toggle the selection of the current file or files given as arguments.
#toggle

# Reverse the selection of all files in the current directory (i.e. toggle all
# files). Selections in other directories are not affected by this command. You
# can define a new command to select all files in the directory by combining
# invert with unselect (i.e. cmd select-all :unselect; invert), though this will
# also remove selections in other directories.
# (default v)
map v invert

# Reverse the selection (i.e. toggle) of all files at or after the current file
# in the current directory.
# To select a contiguous block of files, use this command on the first file you
# want to select. Then, move down to the first file you do not want to select
# (the one after the end of the desired selection) and use this command again.
# This achieves an effect similar to the visual mode in Vim.
# This command is experimental and may be removed once a better replacement for
# the visual mode is implemented in lf. If you'd like to experiment with using
# this command, you should bind it to a key (e.g. V) for a better experience.
#invert-below

# Remove the selection of all files in all directories.
# (default u)
map u unselect

# Select/unselect files that match the given glob.
#glob-select
#glob-unselect

# Calculate the total size for each of the selected directories. Option info
# should include size and option dircounts should be disabled to show this size.
# If the total size of a directory is not calculated, it will be shown as -.
#calcdirsize

# Remove all keybindings associated with the map command. This command can be
# used in the config file to remove the default keybindings. For safety
# purposes, : is left mapped to the read command, and cmap keybindings are
# retained so that it is still possible to exit lf using :quit.
#clearmaps

# If there are no selections, save the path of the current file to the copy
# buffer, otherwise, copy the paths of selected files.
# (default y)
map y copy

# If there are no selections, save the path of the current file to the cut
# buffer, otherwise, copy the paths of selected files.
# (default d)
map d cut

# Copy/Move files in the copy/cut buffer to the current working directory. A
# custom paste command can be defined to override this default.
# (default p)
map p paste

# Clear file paths in copy/cut buffer.
# (default c)
map c clear

# Synchronize copied/cut files with the server. This command is automatically
# called when required.
#sync

# Draw the screen. This command is automatically called when required.
#draw

# Synchronize the terminal and redraw the screen.
# (default <c-l>)
map <c-l> #redraw

# Load modified files and directories. This command is automatically called when
# required.
#load

# Flush the cache and reload all files and directories.
# (default <c-r>)
map <c-r> reload

# Print the given arguments to the message line at the bottom.
#echo

# Print the given arguments to the message line at the bottom and also to the
# log file.
#echomsg

# Print given arguments to the message line at the bottom as errorfmt and also
# to the log file.
#echoerr

# Change the working directory to the given argument.
#cd

# Change the current file selection to the given argument.
#select

# Remove the current file or selected file(s). A custom delete command can be
# defined to override this default.
# (modal)
map <delete> delete

# Rename the current file using the built-in method. A custom rename command can
# be defined to override this default.
# (modal) (default r)
map r rename

# Read the configuration file given in the argument.
#source

# Simulate key pushes given in the argument.
#push

# Read a command to evaluate.
# (modal) (default :)
#read

# Read a shell command to execute.
# (modal) (default $)
#shell

# Read a shell command to execute piping its standard I/O to the bottom
# statline.
# (modal) (default %)
#shell-pipe

# Read a shell command to execute and wait for a key press in the end.
# (modal) (default !)
#shell-wait

# Read a shell command to execute asynchronously without standard I/O.
# (modal) (default &)
#shell-async

# Read key(s) to find the appropriate file name match in the forward/backward
# direction and jump to the next/previous match.
# (modal) (default f)
map f find

# (modal) (default F)
map F #find-back

# (default ;)
map ; find-next

# (default ,)
map , find-prev

# Read a pattern to search for a file name match in the forward/backward
# direction and jump to the next/previous match.
# (default /)
map / search

# (default ?)
map ? #search-back

# (default n)
map <gt> search-next

# (default N)
map <lt> search-prev

# Command filter reads a pattern to filter out and only view files matching the
# pattern. Command setfilter does the same but uses an argument to set the
# filter immediately. You can supply an argument to filter to use as the
# starting prompt.
# (modal)
#filter

#setfilter

# Save the current directory as a bookmark assigned to the given key.
# (modal) (default m)
map ms mark-save

# Change the current directory to the bookmark assigned to the given key. A
# special bookmark ' holds the previous directory after a mark-load, cd, or
# select command.
# (modal) (default ')
map ml mark-load

# Remove a bookmark assigned to the given key.
# (modal) (default ")
map mr mark-remove

# Tag a file with * or a single-width character given in the argument. You can
# define a new tag-clearing command by combining tag with tag-toggle (i.e. cmd
# tag-clear :tag; tag-toggle).
#tag

# Tag a file with * or a single width character given in the argument if the
# file is untagged, otherwise remove the tag.
# (default t)
map t #tag-toggle
#-------------------------------------------------------------------------------
# COMMAND LINE COMMANDS
#-------------------------------------------------------------------------------
# Quit command line mode and return to normal mode.
# (default <esc>)
#cmd-escape

# Autocomplete the current word.
# (default <tab>)
#cmd-complete

# Autocomplete the current word with the menu selection. You need to assign keys
# to these commands (e.g.
# cmap <tab> cmd-menu-complete; cmap <backtab> cmd-menu-complete-back). You can
# use the assigned keys to display the menu and then cycle through completion
# options.
#cmd-menu-complete

#cmd-menu-complete-back

# Accept the currently selected match in menu completion and close the menu.
#cmd-menu-accept

# Execute the current line.
# (default <c-j> and <enter>)
#cmd-enter

# Interrupt the current shell-pipe command and return to the normal mode.
# (default <c-c>)
#cmd-interrupt

# Go to the next/previous item in the history.
# (default <c-n> and <down>)
#cmd-history-next

# (default <c-p> and <up>)
#cmd-history-prev

# Move the cursor to the left/right.
# (default <c-b> and <left>)
#cmd-left

# (default <c-f> and <right>)
#cmd-right

# Move the cursor to the beginning/end of the line.
# (default <c-a> and <home>)
#cmd-home

# (default <c-e> and <end>)
#cmd-end

# Delete the next character.
# (default <c-d> and <delete>)
#cmd-delete

# Delete the previous character. When at the beginning of a prompt, returns
# either to normal mode or to : mode.
# (default <backspace> and <backspace2>)
#cmd-delete-back

# Delete everything up to the beginning/end of the line.
# (default <c-u>)
#cmd-delete-home

# (default <c-k>)
#cmd-delete-end

# Delete the previous unix word.
# (default <c-w>)
#cmd-delete-unix-word

# Paste the buffer content containing the last deleted item.
# (default <c-y>)
#cmd-yank

# Transpose the positions of the last two characters/words.
# (default <c-t>)
#cmd-transpose

# (default <a-t>)
#cmd-transpose-word

# Move the cursor by one word in the forward/backward direction.
# (default <a-f>)
#cmd-word

# (default <a-b>)
#cmd-word-back

# Delete the next word in the forward direction.
# (default <a-d>)
#cmd-delete-word

# Delete the previous word in the backward direction.
# (default <a-backspace> and <a-backspace2>)
#cmd-delete-word-back

# Capitalize/uppercase/lowercase the current word and jump to the next word.
# (default <a-c>)
#cmd-capitalize-word

# (default <a-u>)
#cmd-uppercase-word

# (default <a-l>)
#cmd-lowercase-word
#-------------------------------------------------------------------------------
# OPTIONS
#-------------------------------------------------------------------------------
# When this option is enabled, the find command starts matching patterns from
# the beginning of file names, otherwise, it can match at an arbitrary position.
# (bool) (default true)
set anchorfind true

# Automatically quit the server when there are no clients left connected.
# (bool) (default true)
set autoquit true

# Format string of the box drawing characters enabled by the drawbox option.
# (string) (default \033[0m)
set borderfmt "\033[0m"

# Set the path of a cleaner file. The file should be executable. This file is
# called if previewing is enabled, the previewer is set, and the previously
# selected file has its preview cache disabled. The following arguments are
# passed to the file, (1) current file name, (2) width, (3) height,
# (4) horizontal position, (5) vertical position of preview pane and
# (6) next file name to be previewed respectively. Preview cleaning is disabled
# when the value of this option is left empty.
# (string) (default ``) (not called if empty)
set cleaner '/home/ricardo/.config/lf/cleaner'

# Format string of the indicator for files to be copied.
# (string) (default \033[7;33m)
set copyfmt "\033[7;32m"

# Format strings for highlighting the cursor. cursoractivefmt applies in the
# current directory pane, cursorparentfmt applies in panes that show parents of
# the current directory, and cursorpreviewfmt applies in panes that preview
# directories.
# The default is to make the active cursor and the parent directory cursor
# inverted. The preview cursor is underlined.
# Some other possibilities to consider for the preview or parent cursors: an
# empty string for no cursor, \033[7;2m for dimmed inverted text (visibility
# varies by terminal), \033[7;90m for inverted text with grey (aka
# "brightblack") background.
# If the format string contains the characters %s, it is interpreted as a
# format string for fmt.Sprintf. Such a string should end with the terminal
# reset sequence. For example, \033[4m%s\033[0m has the same effect as \033[4m.
# (string) (default \033[7m)
set cursoractivefmt "\033[7m"

# string (default \033[7m)
set cursorparentfmt "\033[7m"

# string (default \033[4m)
set cursorpreviewfmt "\033[4m"

# Format string of the indicator for files to be cut.
# (string) (default \033[7;31m)
set cutfmt "\033[7;31m"

# Cache directory contents.
# (bool) (default true)
set dircache true

# When this option is enabled, directory sizes show the number of items inside
# instead of the total size of the directory, which needs to be calculated for
# each directory using calcdirsize. This information needs to be calculated by
# reading the directory and counting the items inside. Therefore, this option is
# disabled by default for performance reasons. This option only has an effect
# when info has a size field and the pane is wide enough to show the
# information. 999 items are counted per directory at most, and bigger
# directories are shown as 999+.
# (bool) (default false)
set dircounts false

# Show directories first above regular files.
# (bool) (default true)
set dirfirst true

# Show only directories.
# (bool) (default false)
set dironly false

# If enabled, directories will also be passed to the previewer script. This
# allows custom previews for directories.
# (bool) (default false)
set dirpreviews false

# Draw boxes around panes with box drawing characters.
# (bool) (default false)
set drawbox true

# Format string of file name when creating duplicate files. With the default
# format, copying a file abc.txt to the same directory will result in a
# duplicate file called abc.txt.~1~. Special expansions are provided, %f as the
# file name, %b for the basename (file name without extension), %e as the
# extension (including the dot) and %n as the number of duplicates.
# (string) (default %f.~%n~)
set dupfilefmt '%b~%n%e'

# Format string of error messages shown in the bottom message line.
# If the format string contains the characters %s, it is interpreted as a format
# string for fmt.Sprintf. Such a string should end with the terminal reset
# sequence. For example, \033[4m%s\033[0m has the same effect as \033[4m.
# (string) (default \033[7;31;47m)
set errorfmt "\033[7;31;47m"

# File separator used in environment variables fs and fx.
# (string) (default \n)
set filesep "\n"

# Number of characters prompted for the find command. When this value is set to
# 0, find command prompts until there is only a single match left.
# (int) (default 1)
set findlen 1

# Patterns are treated as globs for the filter command, see globsearch for more
# details.
# (bool) (default false)
set globfilter false

# When this option is enabled, search command patterns are considered as globs,
# otherwise, they are literals. With globbing, * matches any sequence, ? matches
# any character, and [...] or [^...] matches character sets or ranges.
# Otherwise, these characters are interpreted as they are.
# (bool) (default false)
set globsearch false

# Show hidden files. On Unix systems, hidden files are determined by the value
# of hiddenfiles. On Windows, files with hidden attributes are also considered
# hidden files.
# (bool) (default false)
set hidden true

# List of hidden file glob patterns. Patterns can be given as relative or
# absolute paths. Globbing supports the usual special characters, * to match any
# sequence, ? to match any character, and [...] or [^...] to match character
# sets or ranges. In addition, if a pattern starts with !, then its matches are
# excluded from hidden files. To add multiple patterns, use : as a separator.
# Example: .*:lost+found:*.bak
# ([]string) (default .* for Unix and `` for Windows)
set hiddenfiles '.*'

# Save command history.
# (bool) (default true)
set history true

# Show icons before each item in the list.
# (bool) (default false)
set icons true

# Sets IFS variable in shell commands. It works by adding the assignment to the
# beginning of the command string as IFS=...; .... The reason is that IFS
# variable is not inherited by the shell for security reasons. This method
# assumes a POSIX shell syntax so it can fail for non-POSIX shells. This option
# has no effect when the value is left empty. This option does not have any
# effect on Windows.
# (string) (default ``)
set ifs ''

# Ignore case in sorting and search patterns.
# (bool) (default true)
set ignorecase true

# Ignore diacritics in sorting and search patterns.
# (bool) (default true)
set ignoredia true

# Apply filter pattern after each keystroke during filtering.
# (bool) (default false)
set incfilter false

# Jump to the first match after each keystroke during searching.
# (bool) (default false)
set incsearch true

# A list of information that is shown for directory items at the right side of
# the pane. Currently supported information types are size, time, atime, ctime,
# perm, user and group. Information is only shown when the pane width is more
# than twice the width of information.
# ([]string) (default ``)
set info 'size'

# Format string of the file time shown in the info column when it matches this
# year.
# (string) (default Jan _2 15:04)
set infotimefmtnew '02/01/2006'

# Format string of the file time shown in the info column when it doesn't match
# this year.
# (string) (default Jan _2  2006)
set infotimefmtold '02/01/2006'

# An IETF BCP 47 language tag (e.g. zh-CN) for specifying the locale used when
# using sort type natural and name.
# An empty string means disable locale ordering, and the special value * is used
# to indicate reading the locale setting from the system environment.
# (string) (default ``)
#set locale ''

# Send mouse events as input.
# (bool) (default false)
set mouse true

# Show the position number for directory items on the left side of the pane.
# When the relativenumber option is enabled, only the current line shows the
# absolute position and relative positions are shown for the rest.
# (bool) (default false)
set number true

# Format string of the position number for each line.
# (string) (default \033[33m)
set numberfmt "\033[97m"

# Set the interval in seconds for periodic checks of directory updates. This
# works by periodically calling the load command. Note that directories are
# already updated automatically in many cases. This option can be useful when
# there is an external process changing the displayed directory and you are not
# doing anything in lf. Periodic checks are disabled when the value of this
# option is set to zero.
# (int) (default 0)
set period 0

# List of attributes that are preserved when copying files. Currently supported
# attributes are mode (i.a. access mode) and timestamps (i.e. modification time
# and access time). Note that preserving other attributes like ownership of
# change/birth timestamp is desirable, but not portably supported in Go.
# ([]string) (default mode)
set preserve "mode"

# Show previews of files and directories at the rightmost pane. If the file has
# more lines than the preview pane, the rest of the lines are not read. Files
# containing the null character (U+0000) in the read portion are considered
# binary files and displayed as binary.
# (bool) (default true)
set preview true

# Set the path of a previewer file to filter the content of regular files for
# previewing. The file should be executable. The following arguments are passed
# to the file, (1) current file name, (2) width, (3) height, (4) horizontal
# position, and (5) vertical position of preview pane respectively. SIGPIPE
# signal is sent when enough lines are read. If the previewer returns a non-zero
# exit code, then the preview cache for the given file is disabled. This means
# that if the file is selected in the future, the previewer is called once
# again. Preview filtering is disabled and files are displayed as they are when
# the value of this option is left empty.
# (string) (default ``) (not filtered if empty)
set previewer '/home/ricardo/.config/lf/preview'

# Format string of the prompt shown in the top line. Special expansions are
# provided, %u as the user name, %h as the hostname, %w as the working
# directory, %d as the working directory with a trailing path separator, %f as
# the file name, and %F as the current filter. %S may be used once and will
# provide a spacer so that the following parts are right aligned on the screen.
# The home folder is shown as ~ in the working directory expansion. Directory
# names are automatically shortened to a single character starting from the
# leftmost parent when the prompt does not fit the screen.
# (string) (default \033[32;1m%u@%h\033[0m:\033[34;1m%d\033[0m\033[1m%f\033[0m)
set promptfmt "[ %d%f ]"

# List of ratios of pane widths. Number of items in the list determines the
# number of panes in the UI. When the preview option is enabled, the rightmost
# number is used for the width of the preview pane.
# ([]int) (default 1:2:3)
set ratios '1:2:3'

# Show the position number relative to the current line. When number is enabled,
# the current line shows the absolute position, otherwise nothing is shown.
# (bool) (default false)
set relativenumber false

# Reverse the direction of sort.
# (bool) (default false)
set reverse false

# Draw rounded outer corners when the drawbox option is enabled.
# (bool) (default false)
set roundbox false

# Format string of the ruler shown in the bottom right corner. Special
# expansions are provided, %a as the pressed keys, %p as the progress of file
# operations, %m as the number of files to be cut (moved), %c as the number of
# files to be copied, %s as the number of selected files, %f as the filter, %i
# as the position of the cursor, %t as the number of files shown in the current
# directory, %h as the number of files hidden in the current directory, and %d
# as the amount of free disk space remaining. Additional expansions are provided
# for environment variables exported by lf, in the form %{lf_<name>} (e.g.
# %{lf_selmode}). This is useful for displaying the current settings. Expansions
# are also provided for user-defined options, in the form %{lf_user_<name>}
# (e.g. %{lf_user_foo}). The | character splits the format string into sections.
# Any section containing a failed expansion (result is a blank string) is
# discarded and not shown.
# (string) (default   %a|  %p|  \033[7;31m %m \033[0m|  \033[7;33m %c \033[0m|  \033[7;35m %s \033[0m|  \033[7;34m %f \033[0m|  %i/%t)
set rulerfmt "  %a|  %p|  \033[7;31m %m \033[0m|  \033[7;32m %c \033[0m|  \033[7;93m %s \033[0m|  \033[7;34m %f \033[0m|  %i/%t"

# Minimum number of offset lines shown at all times at the top and bottom of the
# screen when scrolling. The current line is kept in the middle when this option
# is set to a large value that is bigger than the half of number of lines. A
# smaller offset can be used when the current file is close to the beginning or
# end of the list to show the maximum number of items.
# (int) (default 0)
set scrolloff 0

# Format string of the indicator for files that are selected.
# (string) (default \033[7;35m)
set selectfmt "\033[7;93m"

# Selection mode for commands. When set to all it will use the selected files
# from all directories. When set to dir it will only use the selected files in
# the current directory.
# (string) (default all)
set selmode 'dir'

# Shell executable to use for shell commands. Shell commands are executed as
# shell shellopts shellflag command -- arguments.
# (string) (default sh for Unix and cmd for Windows)
set shell 'sh'

# Command line flag used to pass shell commands.
# (string) (default -c for Unix and /c for Windows)
set shellflag '-c'

# List of shell options to pass to the shell executable.
# ([]string) (default ``)
set shellopts ''

# Show bindings associated with pressed keys.
# (bool) (default true)
set showbinds true

# Render sixel images in preview.
# (bool) (default false)
set sixel false

# Override ignorecase option when the pattern contains an uppercase character.
# This option has no effect when ignorecase is disabled.
# (bool) (default true)
set smartcase true

# Override ignoredia option when the pattern contains a character with
# diacritic. This option has no effect when ignoredia is disabled.
# (bool) (default false)
set smartdia false

# Sort type for directories. Currently supported sort types are natural, name,
# size, time, ctime, atime, and ext.
# (string) (default natural)
set sortby 'natural'

# Format string of the file info shown in the bottom left corner. Special
# expansions are provided, %p as the file permissions, %c as the link count, %u
# as the user, %g as the group, %s as the file size, %S as the file size but
# with a fixed width of four characters (left-padded with spaces), %t as the
# last modified time, and %l as the link target. The | character splits the
# format string into sections. Any section containing a failed expansion (result
# is a blank string) is discarded and not shown.
# (string) (default \033[36m%p\033[0m| %c| %u| %g| %S| %t| -> %l)
set statfmt "\033[36m%p\033[0m| / %u| / %g| / %S| / %t| / -> %l"

# Number of space characters to show for horizontal tabulation (U+0009)
# character.
# (int) (default 8)
set tabstop 8

# Format string of the tags.
# If the format string contains the characters %s, it is interpreted as a format
# string for fmt.Sprintf. Such a string should end with the terminal reset
# sequence. For example, \033[4m%s\033[0m has the same effect as \033[4m.
# (string) (default \033[31m)
set tagfmt "\033[31m"

# Marks to be considered temporary (e.g. abc refers to marks a, b, and c). These
# marks are not synced to other clients and they are not saved in the bookmarks
# file. Note that the special bookmark ` is always treated as temporary and it
# does not need to be specified.
# (string) (default ``)
set tempmarks ''

# Format string of the file modification time shown in the bottom line.
# (string) (default Mon Jan _2 15:04:05 2006)
set timefmt '02/01/2006 15:04:05'

# The truncate character that is shown at the end when the file name does not
# fit into the pane.
# (string) (default ~)
set truncatechar '~'

# When a filename is too long to be shown completely, the available space is
# partitioned into two pieces. truncatepct defines a fraction (in percent
# between 0 and 100) for the size of the first piece, which will show the
# beginning of the filename. The second piece will show the end of the filename
# and will use the rest of the available space. Both pieces are separated by the
# truncation character (truncatechar). A value of 100 will only show the
# beginning of the filename, while a value of 0 will only show the end of the
# filename, e.g.:
# set truncatepct 100 -> very-long-filename-tr~ (default)
# set truncatepct 50 -> very-long-f~-truncated
# set truncatepct 0 -> ~ng-filename-truncated
# (int) (default 100)
set truncatepct 100

# String shown after commands of shell-wait type.
# (string) (default Press any key to continue)
set waitmsg 'Press any key to continue'

# Watch the filesystem for changes using fsnotify to automatically refresh file
# information. FUSE is currently not supported due to limitations in fsnotify.
# (bool) (default false)
set watch false

# Searching can wrap around the file list.
# (bool) (default true)
set wrapscan true

# Scrolling can wrap around the file list.
# (bool) (default false)
set wrapscroll false

# Any option that is prefixed with user_ is a user-defined option and can be set
# to any string. Inside a user-defined command, the value will be provided in
# the lf_user_{option} environment variable. These options are not used by lf
# and are not persisted.
# (string) (default none)
set user_{option} none
#-------------------------------------------------------------------------------
# DEFAULTS
#-------------------------------------------------------------------------------
cmd open &$OPENER "$f"
map e $$EDITOR "$f"
map i $$PAGER "$f"
map w $$SHELL
cmd doc $$lf -doc | $PAGER
map <f-1> doc
cmd maps $lf -remote "query $id maps" | $PAGER
cmd cmaps $lf -remote "query $id cmaps" | $PAGER
cmd cmds $lf -remote "query $id cmds" | $PAGER

map zh set hidden!
map zr set reverse!
map zn set info
map zs set info size
map zt set info time
map za set info size:time
map sn :set sortby natural; set info
map ss :set sortby size; set info size
map st :set sortby time; set info time
map sa :set sortby atime; set info atime
map sc :set sortby ctime; set info ctime
map se :set sortby ext; set info
map gh cd ~
map <space> :toggle; down
#-------------------------------------------------------------------------------
# CUSTOM
#-------------------------------------------------------------------------------
map gc cd ~/.config
map ga cd ~/AUR
map gd cd ~/Documents
map gD cd ~/Downloads
map gm cd ~/Media
map gp cd ~/Projects

# Define a custom 'open' command
# This command is called when current file is not a directory.
# Uses an editor for text files and a file opener for the rest.
#cmd open &{{
#    case $(file --mime-type -Lb $f) in
#        text/*) lf -remote "send $id \$$EDITOR \$fx";;
#        *) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
#    esac
#}}

# Create new directories
cmd mkdir %{{
    printf " new directory: "
    read dir
    mkdir -p -- "$dir"
    lf -remote "send $id select \"$(printf '%s' "$dir" | sed 's/\\/\\\\/g;s/"/\\"/g')\""
}}

map N mkdir

# Create new files
cmd touch %{{
    printf " new file: "
    read file
    touch -- "$file"
    lf -remote "send $id select \"$(printf '%s' "$file" | sed 's/\\/\\\\/g;s/"/\\"/g')\""
}}

map n touch

# Define a custom 'delete' command
cmd delete %{{
    readarray -t files < <(echo "$fx")

    if [ -z "$fs" ]; then
        printf " %s - delete? [y/n]: " "$f"
    else
        printf " delete the %s selected files? [y/n]: " "${#files[@]}"
    fi

    read ans
    [[ "$ans" == "y" || "$ans" == "Y" ]] && trash "${files[@]}"
    printf "\n"
}}

# Follow symbolic links
cmd follow-link %{{
    lf -remote "send $id select \"$(readlink -- "$f" | sed 's/\\/\\\\/g;s/"/\\"/g')\""
}}

map gl follow-link

# Toggle the preview column
cmd toggle-preview %{{
    if [ "$lf_preview" = true ]; then
        lf -remote "send $id :set preview false; set ratios 1:5"
    else
        lf -remote "send $id :set preview true; set ratios 1:2:3"
    fi
}}

map zp toggle-preview

# Extract the current file with the right command
cmd extract %{{
    printf " %s - extract? [y/n]: " "$f"
    read ans

    if [[ "$ans" == "y" || "$ans" == "Y" ]]; then
        case "$f" in
            *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf "$f";;
            *.tar.gz|*.tgz) tar xzvf "$f";;
            *.tar.xz|*.txz) tar xJvf "$f";;
            *.zip|*.7z) 7z x "$f";;
            *.rar) unar -force-directory "$f";;
        esac
    fi

    printf "\n"
}}

map x extract
